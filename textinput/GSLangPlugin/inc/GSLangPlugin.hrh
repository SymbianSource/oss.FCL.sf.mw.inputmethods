/*
* Copyright (c) 2005 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0""
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Contains definitions GSLangPlugin.
*
*/

#ifndef GSLANGPLUGIN_HRH
#define GSLANGPLUGIN_HRH

// GSUi's commands

// Setting items for GSLangPlugin main view.
enum TGSLangPluginItems
    {
    EGSLangIdDTL,
    EGSLangIdITL,
    EGSLangAHNumberMode,
    EGSLangHindiNumberMode,
    EGSLangIdT9L,
    EGSLangIdJPT,
    EGSLangIdResetAtokDict,
    EGSLangIdEPT,
    EGSLangIdDIM,
    EGSLangIdWNI,
    EGSLangIdFS,
    EGSLangIdROS,
    EGSLangIdKT,        // Keypress timeout
    EGSLangIdJQC,       // Japanese Qwerty Comma
    EGSLangIdJQP,       // Japanese Qwerty Period
    EGSLangIdJQWSP,     // Japanese Qwerty Width Of Space
    EGSLangIdCangJie,
    EGSLangIdPredictiveMode,
    EGSLangIdPredictiveOptions
    };



enum TGSLangNotes
    { 
    ECWActivateNote = 1,
    ECWCancelNote,
    ECWNotActiveNote,
    ERequestCancelledNote,
    ERequestingNote,
    EAlsDisabledNote,
    EAlsEnabledNote,
    ECBActiveNote,
    EPasswordErrorNote,
    EPasswordChangedNote,
    ECBNotActiveNote,
    ESearchingNote,
    ENoNetworksFoundNote,
    ECallInProgress,
    EHomeNetworksSelectedNote,
    ENetworkSelectedNote,
    ENoNetworkAccessNote,
    ENwRegistrationInterrupted,
    ECugIndexErrorNote,
    EImageLoadWaitNote
    };
    
// Number modes used by Arabic or Hindi.
enum TGSNumberModes
    { 
    EGSNbrModeLatin,
    EGSNbrModeArabic = 1,
    EGSNbrModeIndic = 1
    };
    
// Number mode type
enum TGSNumberModeType
    {
    EGSNbrModeTypeArabic,
    EGSNbrModeTypeIndic,
    EGSNbrModeTypeEasternArabic //for Urdu & Farsi languages
    };
    
// Keypress timeout
enum
    {
    EGSKeypressTimeoutItemNone = 0,
    EGSKeypressTimeoutItemLong,
    EGSKeypressTimeoutItemMedium,
    EGSKeypressTimeoutItemShort
    };

// Japanese qwerty specif flags
//      Japanese Qwerty Comma ON(Japanese)/OFF(Western)
//      Japanese Qwerty Period ON(Japanese)/OFF(Western)
//      Japanese Qwerty Width Of Space Full/Half width
enum TGSJapQwertyFlags
    {
    EGSJapQwertyFlagNone = 0,
    EGSJapQwertyFlagComma = 0x0001,
    EGSJapQwertyFlagPeriod = 0x0002,
    EGSJapQwertyFlagSpaceFullWidth = 0x0004
    };

enum TGSChiCangJieInput
    {
    EGSChiCangJieNormal = 0,
    EGSChiCangJieEasy,
    EGSChiCangJieAdvanced
    };
    
enum TLangSettPageItems
    {
    EGSLangSPIdPinyin,
    EGSLangSPIdZhuyin,
    EGSLangSPIdStroke,
    EGSLangSPIdText,
    EGSLangSPIdUpper,
    EGSLangSPIdLower
    };
    
enum TLangQwSettPageItems
    {
    EGSLangSPIdQwPinyin,
    EGSLangSPIdQwZhuyin,
    EGSLangSPIdQwStroke,
    EGSLangSPIdQwCangJie,
    EGSLangSPIdQwEnglish
    };
// New Req 4.0 Predictive mode : Autocompletion
enum{
	EGSPredictiveModeNormal = 0,
	EGSPredictiveModeAutocompletion
	};

enum TGSLangDualInput
    {
    EGSLangInputPrimary,
    EGSLangInputSecondary
    };
#endif // GSLANGPLUGIN_HRH
//End of File
