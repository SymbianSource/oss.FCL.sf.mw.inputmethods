/*
* Copyright (c) 2005 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0""
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource file for GSLangPlugin.
*
*/

//  RESOURCE IDENTIFIER
NAME    GSLA // 4 letter ID

//  INCLUDES
#include    <gslangplugin.loc>
#include    "GSLangPlugin.hrh"
//#include    <GSLangPlugin.mbg> // Icons and bitmaps

#include    <data_caging_paths_strings.hrh>
#include    <bldvariant.hrh>
#include    <avkon.rsg>
#include    <avkon.mbg>
#include    <eikon.rsg>
#include    <avkon.rh>
#include    <avkon.loc>
#include    <uikon.rh>
#include    <gsapp.rsg>
#include     <gs.loc>

#include    <eikon.rh>
#include    <gscommon.rh> // Common GS resource structures


// CONSTANTS

//  RESOURCE DEFINITIONS

//----------------------------------------------------
//
//
//    Needed or loading the resource fails!
//
//----------------------------------------------------
//
RESOURCE RSS_SIGNATURE
    {
    }

// Common resources among GS

//----------------------------------------------------
//
//    r_gs_gen_view
//    General settings view.
//
//----------------------------------------------------
//
RESOURCE AVKON_VIEW r_gs_lang_view
    {
    menubar = r_gs_menubar_change_exit;
    cba = R_GS_SOFTKEYS_OPTIONS_BACK_CHANGE;
    }


//----------------------------------------------------
//
//    r_gs_gen_view_title
//    General settings view title.
//
//----------------------------------------------------
//
RESOURCE TITLE_PANE r_gs_lang_plugin_title
    {
    txt = qtn_set_title_pers_language;
    }


//----------------------------------------------------
//  r_gs_gen_view_caption
//
// gen view caption for plugin
//----------------------------------------------------
//
RESOURCE TBUF r_gs_lang_plugin_caption
    {
    buf = qtn_set_pers_language;
    }






//----------------------------------------------------
//
//    r_lang_lbx
//    General view's listbox.
//
//----------------------------------------------------
//
RESOURCE GS_FEATURE_ARRAY r_lang_lbx
    {
    items =
        {
        GS_FEATURE
            {
            txt = " \t"qtn_cp_device_language"\t\t";
            item = EGSLangIdDTL;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_set_input_language"\t\t";
            item = EGSLangIdITL;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_ah_default_nbr_sett"\t\t";
            item = EGSLangAHNumberMode;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_hi_default_nbr_sett"\t\t";
            item = EGSLangHindiNumberMode;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_t9_pre_default_setting"\t\t";
            item = EGSLangIdT9L;
            type = EGSListBoxItemTypeIsDynamic;
            },
         GS_FEATURE
            {
            txt = " \t"qtn_set_predictive_mode"\t\t";
            item = EGSLangIdPredictiveMode;
            type = EGSListBoxItemTypeIsDynamic;
            },
#ifdef RD_INTELLIGENT_TEXT_INPUT
         GS_FEATURE
            {
            txt = " \t"qtn_pred_options_input_options"\t\t";
            item = EGSLangIdPredictiveOptions;
            type = EGSListBoxItemTypeIsDynamic;
            },
#endif
         GS_FEATURE
            {
            txt = " \t"qtn_set_japin_predictive_input"\t\t";
            item = EGSLangIdJPT;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_set_jp_reset_atok_dict"\t\t";
            item = EGSLangIdResetAtokDict;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_set_jp_predtext_eng"\t\t";
            item = EGSLangIdEPT;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_chi_set_default_method"\t\t";
            item = EGSLangIdDIM;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_chi_set_cangjie_mode"\t\t";
            item = EGSLangIdCangJie;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_set_keypress_timeout"\t\t ";
            item = EGSLangIdKT;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_set_japin_qwerty_comma"\t\t";
            item = EGSLangIdJQC;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_set_japin_qwerty_period"\t\t";
            item = EGSLangIdJQP;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = " \t"qtn_set_japin_qwerty_width_space"\t\t";
            item = EGSLangIdJQWSP;
            type = EGSListBoxItemTypeIsDynamic;
            }
        };
    }

// -----------------------------------------------------------------------------
//     r_confirm_reset_atok
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_confirm_reset_atok
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control= AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = qtn_reset_core_dict;
                };
            }
        };
    }


// -----------------------------------------------------------------------------
//     r_confirm_reset_atok_string
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_confirm_reset_atok_string { buf = qtn_reset_core_dict; }


// -----------------------------------------------------------------------------
//     r_confirm_ros
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_confirm_ros
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control= AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = qtn_set_cquery_rmv_oper_set;
                };
            }
        };
    }


// -----------------------------------------------------------------------------
//     r_confirm_ros_string
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_confirm_ros_string { buf = qtn_set_cquery_rmv_oper_set; }


//----------------------------------------------------
//    r_active_calls
//----------------------------------------------------
//
RESOURCE TBUF r_active_calls { buf = qtn_dtl_note_active_calls; }


// DISPLAY TEXT LANGUAGE


//----------------------------------------------------
//
//    r_display_text_language_setting_page
//    Display Text Language Selection
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_display_text_language_setting_page
    {
    // don't show setting number in setting page
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_display_language; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox; // setting page type
    editor_resource_id = r_setting_listbox; // setting page editor
    }


//----------------------------------------------------
//
//    r_display_text_language_setting_page_lbx
//  Display Text Language Selection ListBox Items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_display_text_language_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_dtl_automatic; // first item's localised string
            }
        };
    }


// -----------------------------------------------------------------------------
// R_CONFIRM_DTL
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_confirm_dtl
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control= AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = qtn_langu_restart_query;
                };
            }
        };
    }


// -----------------------------------------------------------------------------
// r_confirm_dtl_string
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_confirm_dtl_string { buf = qtn_langu_restart_query; }


//----------------------------------------------------
//
//  r_input_text_language_setting_page
//  Input Text Language Selection
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_input_text_language_setting_page
    {
    // don't show setting number in setting page
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_input_language; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox; // setting page type
    editor_resource_id = r_setting_listbox; // setting page editor
    }

#ifdef RD_INTELLIGENT_TEXT_INPUT
RESOURCE DIALOG r_inputlanguage_dialog
{
	flags   = EEikDialogFlagNoDrag | EEikDialogFlagFillAppClientRect | 
			  EEikDialogFlagWait | EEikDialogFlagCbaButtons;

	buttons = R_GS_SOFTKEYS_OPTIONS_BACK_CHANGE;
	
	items =
	{
		DLG_LINE
		{
			// This is the control type - its our own setting item list custom control 
			type 	= 	EAknCtLastControlId;
			
			// This is the dialog id - any value can be used as there are no 
			//		other controls on the dialog
			id 		= 	12;

			itemflags	=	EEikDlgItemTakesEnterKey;
			
			// the control data is a setting item list 
			control = AVKON_SETTING_ITEM_LIST 
			{ 
				
				// These are the settings we want to edit 
				items = 
				{
				AVKON_SETTING_ITEM
					{
					identifier = EGSLangInputPrimary;
					setting_page_resource = r_primary_input_language_setting_page;
					associated_resource = r_language_setting_texts;
					name = qtn_set_primary_writing_language;
					},
				AVKON_SETTING_ITEM
					{
					identifier = EGSLangInputSecondary;
					setting_page_resource = r_secondary_input_language_setting_page;
					associated_resource = r_language_setting_texts;
					name = qtn_set_secondary_writing_language;
					}
				};
			};
		}
	};	
}

RESOURCE TBUF r_input_language_settings_title
    {
    buf = qtn_set_input_language;
    }

RESOURCE AVKON_SETTING_PAGE r_primary_input_language_setting_page
    {
    // don't show setting number in setting page
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_primary_writing_language; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknCtPopupSettingList; // setting page type
    editor_resource_id = r_lang_editor; // setting page editor
    }

RESOURCE AVKON_SETTING_PAGE r_secondary_input_language_setting_page
    {
    // don't show setting number in setting page
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_secondary_writing_language; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknCtPopupSettingList; // setting page type
    editor_resource_id = r_lang_editor; // setting page editor
    }

RESOURCE AVKON_POPUP_SETTING_TEXTS r_language_setting_texts
	{
	setting_texts_resource = r_language_settingitem_texts;
	}	

RESOURCE ARRAY r_language_settingitem_texts
	{
	items =
	    {
	    AVKON_ENUMERATED_TEXT
	        {
	        value = 0;
	        text = qtn_set_secondary_writing_lang_none;
	        }
	    };
	}

RESOURCE TBUF r_secondary_writing_lang_none
    {
    buf = qtn_set_secondary_writing_lang_none;
    }

RESOURCE POPUP_SETTING_LIST r_lang_editor
	{
	}
#endif

// T9 On Off

//----------------------------------------------------
//
//  r_t9_on_off_setting_page
//  T9 On/Off setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_t9_on_off_setting_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_t9_pre_default_setting;
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox;
    editor_resource_id = r_setting_listbox;
    }


//----------------------------------------------------
//
//  r_jp_eng_on_off_setting_page
//  T9 On/Off setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_jp_eng_on_off_setting_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_jp_predtext_eng;
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox;
    editor_resource_id = r_setting_listbox;
    }


//----------------------------------------------------
//
//  r_jp_ptxt_on_off_setting_page
//  T9 On/Off setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_jp_ptxt_on_off_setting_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_japin_predictive_input;
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox;
    editor_resource_id = r_setting_listbox;
    }


//----------------------------------------------------
//
//  r_t9_on_off_setting_page_lbx
//  T9 On/Off setting page items list box
//
//----------------------------------------------------
//
RESOURCE ARRAY r_t9_on_off_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_t9_on;
            },
        LBUF
            {
            txt = qtn_t9_off;
            }
        };
    }
#ifdef RD_INTELLIGENT_TEXT_INPUT

//----------------------------------------------------
//
//  r_predictive_text_multi_setting_page
//  ITI Predictive text multisetting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_predictive_text_multi_setting_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_t9_pre_default_setting;
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__MARK; // softkeys for setting page
    type = EAknSetListBox;
    editor_resource_id = r_setting_listbox;
    }
#endif

// DEFAULT NUMBER MODE FOR A&H

//----------------------------------------------------
//
//  r_ah_number_mode_settings_page
//  Default Arabic & Hebrew input method setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_ah_number_mode_settings_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_ah_default_nbr_sett;
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox;
    editor_resource_id = r_setting_listbox;
    }


//----------------------------------------------------
//
//  r_ah_default_input_method_lbx
//  Default input method list box items for A&H
//
//----------------------------------------------------
//
RESOURCE ARRAY r_ah_default_input_method_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_ah_latin_nbrs;
            },
        LBUF
            {
            txt = qtn_ah_arabic_nbrs;
            }
        };
    }

// DEFAULT NUMBER MODE FOR HINDI

//----------------------------------------------------
//
//  r_hi_number_mode_settings_page
//  Default Hindi input method setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_hi_number_mode_settings_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_hi_default_nbr_sett;
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox;
    editor_resource_id = r_setting_listbox;
    }

//----------------------------------------------------
//
//  r_hi_default_input_method_lbx
//  Default input method list box items for Hindi
//
//----------------------------------------------------
//
RESOURCE ARRAY r_hi_default_input_method_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_hi_latin_nbrs;
            },
        LBUF
            {
            txt = qtn_hi_indic_nbrs;
            }
        };
    }


//----------------------------------------------------
//
// r_number_mode_lbx
// Number modes.
//
//----------------------------------------------------
//
RESOURCE GS_FEATURE_ARRAY r_number_mode_lbx
    {
    items =
        {
        GS_FEATURE
            {
            txt  = qtn_latin_nbrs;
            item = EGSNbrModeLatin;
            },
        GS_FEATURE
            {
            txt  = qtn_ah_arabic_nbrs;
            item = EGSNbrModeArabic;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt  = qtn_hi_indic_nbrs;
            item = EGSNbrModeIndic;
            type = EGSListBoxItemTypeIsDynamic;
            }
        };
    }


// -----------------------------------------------------------------------------
// r_t9_onoff_not_available
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_t9_onoff_not_available { buf = qtn_t9_set_not_available; }



// DEFAULT INPUT METHOD SETTING PAGE

//----------------------------------------------------
//
//
//    Default input method setting page.
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_ch_default_input_method_setting_page
    {
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_chi_set_default_method;
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox;
    editor_resource_id = r_setting_listbox;
    }

//----------------------------------------------------
//
//    r_default_input_method_prc_setting_page_lbx
//  default input method selection listbox Items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_default_input_method_prc_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = text_chi_input_pinyin;
            },
        LBUF
            {
            txt = text_chi_input_stroke;
            },
        LBUF
            {
            txt = qtn_chi_input_latin_text;
            },
        LBUF
            {
            txt = qtn_chi_input_latin_upper;
            },
        LBUF
            {
            txt = qtn_chi_input_latin_lower;
            }
        };
    }

//----------------------------------------------------
//
//  r_default_input_method_tw_setting_page_lbx
//  default input method selection listbox Items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_default_input_method_tw_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = text_chi_input_zhuyin;
            },
        LBUF
            {
            txt = text_chi_input_stroke; 
            },
        LBUF
            {
            txt = qtn_chi_input_latin_text;
            },
        LBUF
            {
            txt = qtn_chi_input_latin_upper;
            },
        LBUF
            {
            txt = qtn_chi_input_latin_lower;
            }
        };
    }

//----------------------------------------------------
//
//  r_default_input_method_hk_setting_page_lbx
//  default input method selection listbox Items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_default_input_method_hk_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = text_chi_input_stroke;
            },
        LBUF
            {
            txt = qtn_chi_input_latin_text;
            },
        LBUF
            {
            txt = qtn_chi_input_latin_upper;
            },
        LBUF
            {
            txt = qtn_chi_input_latin_lower;
            }
        };
    }


//----------------------------------------------------
//
//    r_autodiscon_time_number_query
//    Autodisconnect time query.
//
//----------------------------------------------------
//
RESOURCE DIALOG r_autodiscon_time_number_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_DATA_QUERY
                {
                layout = ENumberLayout;
                label = qtn_set_autodiscon_define_time;
                control = AVKON_INTEGER_EDWIN
                    {
                    min = 0;
                    max = 99;
                    maxlength = 2;
                    };
                };
            }
        };
    }


// KEYPRESS TIMEOUT


//----------------------------------------------------
//
//    r_keypress_timeout_setting_page
//    Keypress timeout Selection 
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_keypress_timeout_setting_page
    { 
    // don't show setting number in setting page
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_keypress_timeout; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; 
    type = EAknSetListBox; // setting page type
    editor_resource_id = r_setting_listbox; // setting page editor
    }

//----------------------------------------------------
//
//    r_keypress_timeout_setting_page_lbx
//    Keypress timeout Selection ListBox Items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_keypress_timeout_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_set_keyp_timeout_off;
            },
        LBUF
            {
            txt = qtn_set_keyp_timeout_long;
            },
        LBUF
            {
            txt = qtn_set_keyp_timeout_default;
            },
        LBUF
            {
            txt = qtn_set_keyp_timeout_short;
            }
        };
    }


// JAPANESE QWERTY COMMA

//----------------------------------------------------
//
//    r_jap_qwerty_comma_setting_page
//    ","-key in hiragana/kanji mode inputs setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_jap_qwerty_comma_setting_page
    { 
    // don't show setting number in setting page
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_japin_qwerty_comma; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox; // setting page type
    editor_resource_id = r_setting_listbox; // setting page editor
    }

//----------------------------------------------------
//
//    r_jap_qwerty_comma_setting_page_lbx
//    ","-key in hiragana/kanji mode inputs setting Items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_jap_qwerty_comma_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_set_japin_qwerty_japanese_comma;
            },
        LBUF
            {
            txt = qtn_set_japin_qwerty_western_comma;
            }
        };
    }

// JAPANESE QWERTY PERIOD

//----------------------------------------------------
//
//    r_jap_qwerty_period_setting_page
//    ","-key in hiragana/kanji mode inputs setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_jap_qwerty_period_setting_page
    { 
    // don't show setting number in setting page
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_japin_qwerty_period; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox; // setting page type
    editor_resource_id = r_setting_listbox; // setting page editor
    }

//----------------------------------------------------
//
//    r_jap_qwerty_period_setting_page_lbx
//    "."-key in hiragana/kanji mode inputs setting Items
//
//----------------------------------------------------
//
RESOURCE ARRAY r_jap_qwerty_period_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_set_japin_qwerty_japanese_period;
            },
        LBUF
            {
            txt = qtn_set_japin_qwerty_western_period;
            }
        };
    }

// JAPANESE Width Of Space (Full width/Half width)

//----------------------------------------------------
//
//    r_jap_qwerty_width_space_setting_page
//    Width of Space in hiragana/kanji mode setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_jap_qwerty_width_space_setting_page
    { 
    // don't show setting number in setting page
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_set_japin_qwerty_width_space; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox; // setting page type
    editor_resource_id = r_setting_listbox; // setting page editor
    }

//----------------------------------------------------
//
//    r_jap_qwerty_width_full_half_setting_page_lbx
//    Width of Space/punctuation marks and symbols in
//    hiragana/kanji mode setting Items
//----------------------------------------------------
//
RESOURCE ARRAY r_jap_qwerty_width_full_half_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_japin_edit_full_width;
            },
        LBUF
            {
            txt = qtn_japin_edit_half_width;
            }
        };
    }


// Chinese CangJie input mode
//----------------------------------------------------
//
//    r_chi_cangjie_input_mode_setting_page
//    HK Chinese CangJie input mode setting page
//
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_chi_cangjie_input_mode_setting_page
    { 
    // don't show setting number in setting page
    number = EAknSettingPageNoOrdinalDisplayed;
    label = qtn_chi_set_cangjie_mode; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox; // setting page type
    editor_resource_id = r_setting_listbox; // setting page editor
    }

 
//----------------------------------------------------
//
//    r_chi_cangjie_setting_page_lbx
//    Chinese TW CangJie input method. Supported based
//    on the selected input language.
//----------------------------------------------------
//
RESOURCE ARRAY r_chi_cangjie_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_chi_option_normal_cangjie;
            },
        LBUF
            {
            txt = qtn_chi_option_easy_cangjie;
            },
        LBUF
            {
            txt = qtn_chi_option_advanced_cangjie;
            }
        };
    } 
    

RESOURCE GS_FEATURE_ARRAY r_dim_setting_page_lbx
    {
    items =
        {
        GS_FEATURE
            {
            txt = text_chi_input_pinyin;
            item = EGSLangSPIdPinyin;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = text_chi_input_zhuyin;
            item = EGSLangSPIdZhuyin;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = text_chi_input_stroke;
            item = EGSLangSPIdStroke;
            },
        GS_FEATURE
            {
            txt = qtn_chi_input_latin_text;
            item = EGSLangSPIdText;
            },
        GS_FEATURE
            {
            txt = qtn_chi_input_latin_upper;
            item = EGSLangSPIdUpper;
            },
        GS_FEATURE
            {
            txt = qtn_chi_input_latin_lower;
            item = EGSLangSPIdLower;
            }
        };
    }

RESOURCE GS_FEATURE_ARRAY r_dim_qwerty_setting_page_lbx
    {
    items =
        {
        GS_FEATURE
            {
            txt = qtn_chi_sub_input_pinyin;
            item = EGSLangSPIdQwPinyin;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = qtn_chi_sub_input_zhuyin;
            item = EGSLangSPIdQwZhuyin;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = qtn_chi_sub_input_stroke;
            item = EGSLangSPIdQwStroke;
            },
        GS_FEATURE
            {
            txt = qtn_chi_sub_input_cangjie;
            item = EGSLangSPIdQwCangJie;
            type = EGSListBoxItemTypeIsDynamic;
            },
        GS_FEATURE
            {
            txt = qtn_chi_sub_input_english;
            item = EGSLangSPIdQwEnglish;
            }
        };
    }

/* 
*   r_predictive_mode_setting_page_lbx 
*	4.0 Req Predictive word Autocompletion
*  	Setting Page List Items 
*/

RESOURCE ARRAY r_predictive_mode_setting_page_lbx
    {
    items =
        {
        LBUF
            {
            txt = qtn_set_predictive_mode_normal;
            },
        LBUF
            {
            txt = qtn_set_predictive_mode_autocompletion;
            }
        };
    }

//----------------------------------------------------
//
//    r_predictive_mode_setting_page
//    Predictive mode setting page
//	  
//----------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_predictive_mode_setting_page
    { 
    number = EAknSettingPageNoOrdinalDisplayed; // // setting number is not shown
    label = qtn_set_predictive_mode; //localised string for setting page label
    softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK; // softkeys for setting page
    type = EAknSetListBox; // setting page type
    editor_resource_id = r_setting_listbox; // setting page editor
    }
    
//----------------------------------------------------
//   
//    r_gs_not_enough_memory
//    Not enough memory information note.
//
//----------------------------------------------------
//
RESOURCE TBUF r_gs_not_enough_memory 
    {
    buf = qtn_memlo_not_enough_memory;
    }

// -----------------------------------------------------------------------------
//
// r_gs_menubar_change_exit
// GS menu with 'change' and 'exit' items.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_gs_menubar_change_exit
    {
    titles =
        {
        MENU_TITLE
            {
            menu_pane = r_gs_menu_item_exit;
            },
        MENU_TITLE
            {
            menu_pane = r_gs_menu_item_help;
            },
        MENU_TITLE
            {
            menu_pane = r_gs_menu_item_change;
            }
        };
    }


// -----------------------------------------------------------------------------
//
// r_setting_listbox
// Common listbox editor resource for setting pages.
//
// -----------------------------------------------------------------------------
//
RESOURCE LISTBOX r_setting_listbox
    {
    flags = EEikListBoxMultipleSelection;
    }


// -----------------------------------------------------------------------------
//
// r_gs_menu_item_help
// Change item.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_gs_menu_item_help
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_gs_menu_item_exit
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_gs_menu_item_exit
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknCmdExit;
            txt = qtn_options_exit;
            }
        };
    }


// -----------------------------------------------------------------------------
//
// r_gs_menu_item_change
// Change item.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_gs_menu_item_change
    {
    items =
        {
        MENU_ITEM
            {
            command = EGSCmdAppChange;
            txt = qtn_set_options_change;
            flags = EEikMenuItemAction;
            }
        };
    }
    
    
// End of File
